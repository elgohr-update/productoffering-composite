/*
 * ProductOffering aggregation composite interface
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 0.0.2
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "PAC service")
}

const basePath = "/eapi/catalog/productoffering-composite/v1"

var routes = Routes{
	Route{
		"Index",
		"GET",
		basePath,
		Index,
	},

	Route{
		"GetInstalledBase",
		strings.ToUpper("Get"),
		basePath + "/getInstalledBase",
		GetInstalledBase,
	},

	Route{
		"GetQualifiedCategories",
		strings.ToUpper("Post"),
		basePath + "/getQualifiedCategories",
		GetQualifiedCategories,
	},

	Route{
		"GetQualifiedProductOfferings",
		strings.ToUpper("Post"),
		basePath + "/getQualifiedProductOfferings",
		GetQualifiedProductOfferings,
	},

	Route{
		"GetEligibleCategories",
		strings.ToUpper("Post"),
		"/api/product-composite/v1/qualification/getEligibleCategories",
		GetEligibleCategories,
	},

	Route{
		"QualifyProducts",
		strings.ToUpper("Post"),
		"/api/product-composite/v1/qualification/qualifyProducts",
		QualifyProducts,
	},
}
